// //while
// //let i = o;

// //while (조건){
// //메인 로직
// //증감
// }

// for (초기값; 조건; 증감){

// }

//기본적으로 for하고 완전히 똑같음
// let i = 0;

// while(i<10){
//     console.log(i);
//     i++;
    
// }

// //while (조건){
// //메인 로직
// //증감
// }

// //for (초기

//while문을 활용해서, 3초과 100미만의 숫자 중 5의 배수인 것만 출력하는 예.
// let i2 = 3;

// while(i2 < 100){
//     // console.log(i2);
//     if (i2 % 5===0 && i2>=5) {
//     console.log( "i2중 5의 배수! : "+ i2 );
// }
//i2++;//증감식 빠뜨리면 무한 루프에 갇힌다!!(최초의 값이 조건에 계속 부합하므로 안멈춤!)
//}

//do ~  while문

// let i = 0;

// do {//최초의 한번은 무조건 실행되고 그다음에 조건이 맞는지 확인한다.
// console.log(i);
// i++;//증감문 빠뜨리면 안됨!
// }
// while(i < 10);

//---
// let i2 = 0;

// do {//최초의 한번은 무조건 실행되고 그다음에 조건이 맞는지 확인한다.
// console.log(i2);
// i2++;
// }
// while(i2 > 10);
//이경우 while문 속 조건문이 성립 불가능하지만,
// 최초의 1가 do로 인해 실행되서 0이 출력됨.

//break continue문은 항상 for 문과 결합헤서 쓰인다.

// for (let i=0; i<11; i++){

//     if (i===5){
//         break;//만나는 순간 브레이크~ 뒤는 진행시키지 않음!
//     }
//     console.log(i);
// }

for (let i=0; i<11; i++){

    if (i===5){ //5가 없음!!
        continue;//i=5였을 때 6으로 넘어감!! (다음 순서로 넘어감)
    }
    console.log(i);
}